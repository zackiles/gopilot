name: Release

on:
  push:
    tags:
      - 'v*'

concurrency:
  group: "release-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - os: windows
            arch: amd64
            ext: .exe
          - os: windows
            arch: arm64
            ext: .exe
          - os: darwin
            arch: amd64
            ext: ''
          - os: darwin
            arch: arm64
            ext: ''
          - os: linux
            arch: amd64
            ext: ''
          - os: linux
            arch: arm64
            ext: ''

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.3'
          cache: true
          
      - name: Clean workspace
        run: |
          rm -rf dist
          mkdir -p dist
      
      - name: Build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "Building for ${{ matrix.os }}-${{ matrix.arch }}"
          go build -trimpath -ldflags="-s -w -X main.Version=${VERSION}" -o "dist/gopilot-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}" ./cmd/main.go || {
            echo "Build failed"
            exit 1
          }
          
          # Verify the binary exists and has correct name
          if [[ ! -f "dist/gopilot-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}" ]]; then
            echo "Binary not found after build"
            ls -la dist/
            exit 1
          fi
          
      - name: Generate checksum
        run: |
          cd dist || exit 1
          if [ ! -f "gopilot-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}" ]; then
            echo "Error: Binary file not found"
            exit 1
          fi
          sha256sum "gopilot-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}" > "gopilot-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}.sha256"
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: dist/*
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: binaries
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          generate_release_notes: true
          fail_on_unmatched_files: true 